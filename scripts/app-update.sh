#!/bin/bash

# Math App - Update Script
# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–∑ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è

set -e  # Exit on error

APP_DIR="$HOME/apps/math-app"

echo "================================="
echo "Math App Update"
echo "================================="
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -d "$APP_DIR" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ $APP_DIR"
    exit 1
fi

cd $APP_DIR

echo "üìç –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $APP_DIR"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
if [ ! -d ".git" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –≠—Ç–æ –Ω–µ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
    exit 1
fi

echo "1Ô∏è‚É£  –°–æ–∑–¥–∞–Ω–∏–µ backup –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
if [ -f "database/database.sqlite" ]; then
    DATE=$(date +%Y%m%d_%H%M%S)
    mkdir -p database/backups
    cp database/database.sqlite database/backups/pre_update_$DATE.sqlite
    echo "‚úÖ Backup —Å–æ–∑–¥–∞–Ω: database/backups/pre_update_$DATE.sqlite"
else
    echo "‚ö†Ô∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, backup –ø—Ä–æ–ø—É—â–µ–Ω"
fi

echo ""
echo "2Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏..."
CURRENT_BRANCH=$(git branch --show-current)
CURRENT_COMMIT=$(git rev-parse --short HEAD)
echo "Branch: $CURRENT_BRANCH"
echo "Commit: $CURRENT_COMMIT"

echo ""
echo "3Ô∏è‚É£  –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
git fetch origin

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
UPSTREAM=${1:-'@{u}'}
LOCAL=$(git rev-parse @)
REMOTE=$(git rev-parse "$UPSTREAM")

if [ $LOCAL = $REMOTE ]; then
    echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏"
    exit 0
fi

echo "üì• –ù–∞–π–¥–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –∑–∞–≥—Ä—É–∑–∫–∞..."

# –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ—Å–ª–∏ –µ—Å—Ç—å
if ! git diff-index --quiet HEAD --; then
    echo "‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ..."
    git stash save "Auto-stash before update $(date)"
fi

git pull origin $CURRENT_BRANCH

NEW_COMMIT=$(git rev-parse --short HEAD)
echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –¥–æ commit: $NEW_COMMIT"

echo ""
echo "4Ô∏è‚É£  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
npm install --production

echo ""
echo "5Ô∏è‚É£  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
pm2 restart math-app

echo ""
echo "6Ô∏è‚É£  –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ (5 —Å–µ–∫—É–Ω–¥)..."
sleep 5

echo ""
echo "7Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞..."
pm2 status math-app

echo ""
echo "8Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."
if curl -sf http://localhost:3000/health > /dev/null; then
    echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    curl -s http://localhost:3000/health | json_pp 2>/dev/null || curl http://localhost:3000/health
else
    echo "‚ùå –û—à–∏–±–∫–∞: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç!"
    echo ""
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    echo "  pm2 logs math-app --lines 50"
    exit 1
fi

echo ""
echo "================================="
echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "================================="
echo ""
echo "üìä –ò–∑–º–µ–Ω–µ–Ω–∏—è:"
echo "  –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è: $CURRENT_COMMIT"
echo "  –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è:  $NEW_COMMIT"
echo ""
echo "üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
echo "  git log --oneline $CURRENT_COMMIT..$NEW_COMMIT"
echo ""
echo "üìù –í —Å–ª—É—á–∞–µ –ø—Ä–æ–±–ª–µ–º –æ—Ç–∫–∞—Ç–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:"
echo "  git reset --hard $CURRENT_COMMIT"
echo "  npm install --production"
echo "  pm2 restart math-app"
echo ""
