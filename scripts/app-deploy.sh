#!/bin/bash

# Math App - Deployment Script
# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ VPS

set -e  # Exit on error

APP_DIR="$HOME/apps/math-app"

echo "================================="
echo "Math App Deployment"
echo "================================="
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "$APP_DIR/package.json" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ $APP_DIR"
    echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ —Å–∫–ª–æ–Ω–∏—Ä—É–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:"
    echo "  cd ~/apps"
    echo "  git clone YOUR_REPO_URL math-app"
    exit 1
fi

cd $APP_DIR

echo "üìç –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $APP_DIR"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
if [ ! -f "$APP_DIR/.env" ]; then
    echo "‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo ""
    read -p "–°–æ–∑–¥–∞—Ç—å .env —Ñ–∞–π–ª —Å–µ–π—á–∞—Å? (y/n) " -n 1 -r
    echo ""
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo "–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
        cp .env.example .env
        echo ""
        echo "üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª:"
        echo "  nano $APP_DIR/.env"
        echo ""
        echo "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ:"
        echo "  - OPENAI_API_KEY"
        echo "  - ADMIN_TOKEN (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: node -e \"console.log(require('crypto').randomBytes(32).toString('hex'))\")"
        echo ""
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ..."
    else
        echo "‚ùå –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi
fi

echo "1Ô∏è‚É£  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
npm install --production

echo ""
echo "2Ô∏è‚É£  –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p database
mkdir -p public/uploads
mkdir -p logs

echo ""
echo "3Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
chmod 755 database
chmod 755 public/uploads

echo ""
echo "4Ô∏è‚É£  –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ PM2..."
cat > ecosystem.config.js << 'EOF'
module.exports = {
  apps: [{
    name: 'math-app',
    script: 'src/app.js',
    instances: 1,
    exec_mode: 'fork',
    autorestart: true,
    watch: false,
    max_memory_restart: '500M',
    env: {
      NODE_ENV: 'production',
      PORT: 3000
    },
    error_file: 'logs/err.log',
    out_file: 'logs/out.log',
    log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
    merge_logs: true
  }]
};
EOF

echo ""
echo "5Ô∏è‚É£  –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ PM2..."
pm2 delete math-app 2>/dev/null || true
pm2 start ecosystem.config.js
pm2 save

echo ""
echo "6Ô∏è‚É£  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ PM2..."
pm2 startup | grep "sudo" | bash || true

echo ""
echo "7Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
sleep 2
pm2 status

echo ""
echo "================================="
echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ!"
echo "================================="
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏:"
echo "  curl http://localhost:3000/health"
echo ""
curl -s http://localhost:3000/health | json_pp 2>/dev/null || curl http://localhost:3000/health
echo ""
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  pm2 status              - –°—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "  pm2 logs math-app       - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
echo "  pm2 restart math-app    - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"
echo "  pm2 monit               - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
echo ""
echo "üìù –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Nginx –∫–∞–∫ reverse proxy"
echo "  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫—Ä–∏–ø—Ç: ./scripts/nginx-setup.sh"
echo ""
